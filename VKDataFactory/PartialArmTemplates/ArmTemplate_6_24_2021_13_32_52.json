{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "VKDataFactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "InsertLog",
						"description": "Insert Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[uspInsertProcessLog]",
							"storedProcedureParameters": {
								"createdBy": {
									"value": {
										"value": "@pipeline().parameters.createdBy",
										"type": "Expression"
									},
									"type": "String"
								},
								"LogMessage": {
									"value": {
										"value": "@pipeline().parameters.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"logType": {
									"value": {
										"value": "@pipeline().parameters.logType",
										"type": "Expression"
									},
									"type": "String"
								},
								"processID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"processName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LoadEmployee",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "InsertLog",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "EmployeeDataFlow",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"parameters": {
					"createdBy": {
						"type": "string"
					},
					"logType": {
						"type": "string",
						"defaultValue": "Logtype by vikas"
					},
					"Message": {
						"type": "string",
						"defaultValue": "Before Load by vikas"
					}
				},
				"variables": {
					"ProcessId": {
						"type": "String"
					},
					"TableName": {
						"type": "String"
					},
					"CreateBy": {
						"type": "String"
					},
					"CreatedOn": {
						"type": "String"
					},
					"LogType": {
						"type": "String"
					},
					"Message": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/EmployeeDataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OtherEmployee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "age",
						"type": "int",
						"precision": 10
					},
					{
						"name": "salary",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "employeTarget"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceEmployee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "age",
						"type": "int",
						"precision": 10
					},
					{
						"name": "salary",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "employe"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TargetEmployee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "age",
						"type": "int",
						"precision": 10
					},
					{
						"name": "salary",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "employeLess45"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EmployeeDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "EmployeeDataFlow",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SourceEmployee",
								"type": "DatasetReference"
							},
							"name": "Source"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TargetEmployee",
								"type": "DatasetReference"
							},
							"name": "Sink45"
						},
						{
							"dataset": {
								"referenceName": "OtherEmployee",
								"type": "DatasetReference"
							},
							"name": "SinkOther"
						}
					],
					"transformations": [
						{
							"name": "ConditionalSplit1"
						}
					],
					"script": "source(output(\n\t\tname as string,\n\t\tage as integer,\n\t\tsalary as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Source\nSource split(age<45,\n\tdisjoint: false) ~> ConditionalSplit1@(Less45, Greater45)\nConditionalSplit1@Less45 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tname as string,\n\t\tage as integer,\n\t\tsalary as double\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> Sink45\nConditionalSplit1@Greater45 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tname as string,\n\t\tage as integer,\n\t\tsalary as double\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> SinkOther"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceEmployee')]",
				"[concat(variables('factoryId'), '/datasets/TargetEmployee')]",
				"[concat(variables('factoryId'), '/datasets/OtherEmployee')]"
			]
		}
	]
}